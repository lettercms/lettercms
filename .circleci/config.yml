version: 2.1

orbs:
  node: circleci/node@4.1

jobs:
  lint:
    #Run ESLint to check Code Quality
    docker:
      - image: cimg/node:18.15.0

    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          with-cache: true

      - restore_cache:
          keys:
            - dashboard-build-{{ checksum "apps/dashboard/package.json" }}
            - dashboard-build-

      - run:
          name: Lint
          command: yarn lint

  unit-test:
    #Run ESLint to check Code Quality
    docker:
      - image: cimg/node:18.15.0
      - image: mongo:latest
        environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password

    steps:
      - checkout
      - setup_remote_docker
      - node/install-packages:
          pkg-manager: yarn
          with-cache: true
      - restore_cache:
          keys:
            - dashboard-build-{{ checksum "apps/dashboard/package.json" }}
            - dashboard-build-
      - run: echo 'export MONGO_URL="mongodb://root:password@mongo:27017/test?retryWrites=true&w=majority"' >> "$BASH_ENV"
      - run:
          name: Unit Testing
          command: yarn workspace @lettercms/dashboard test


  #TODO: Add Code Quality Analisys Job
  #TODO: Add Testing and coverage Job
  
  build:
    docker:
      - image: cimg/node:18.15.0
    working_directory: ~/lettercms/apps/dashboard
    steps:
      - checkout:
          path: ~/lettercms
      - node/install-packages:
          pkg-manager: yarn
          with-cache: false
      - restore_cache:
          keys:
            - dashboard-build-{{ checksum "package.json" }}
            - dashboard-build-
      - run:
          name: Build
          command: yarn build
      - save_cache:
          key: dashboard-build-{{ checksum "package.json" }}
          paths:
            - apps/dashboard/.next/cache

      #- run:
      #    name: Notify error on deploy
      #    command: node scripts/discord fail dashboard
      #    when: on_fail

      #- run:
      #    name: Notify deploy
      #    command: node scripts/discord success dashboard
      #    when: on_success

job: &job
  context:
    - lettercms-pr
  filters:
    branches:
      ignore:
        - main
        - production

workflows:
  checks:
    jobs:
      - lint:
          <<: *job
      - unit-test:
          <<: *job
      - build:
          <<: *job
          requires:
            - lint
            - unit-test
