version: 2.1

orbs:
  node: circleci/node@4.1

jobs:
  lint:
    #Run ESLint to check Code Quality
    docker:
      - image: cimg/node:16.18.0

    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          with-cache: true

      - restore_cache:
          keys:
            - dashboard-build-{{ checksum "apps/dashboard/package.json" }}
            - dashboard-build-

      - run:
          name: Lint
          command: yarn workspaces run lint

  unit-testing:
    #Run ESLint to check Code Quality
    docker:
      - image: cimg/node:16.18.0
      #- image: circleci/mongo:4.4

    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          with-cache: true
      - restore_cache:
          keys:
            - dashboard-build-{{ checksum "apps/dashboard/package.json" }}
            - dashboard-build-
      - run:
          name: Unit Testing
          command: yarn test


  #TODO: Add Code Quality Analisys Job
  #TODO: Add Testing and coverage Job
  
  build:
    docker:
      - image: cimg/node:16.18.0

    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          with-cache: true
      - restore_cache:
          keys:
            - dashboard-build-{{ checksum "apps/dashboard/package.json" }}
            - dashboard-build-
      - run:
          name: Build
          command: yarn workspace @lettercms/dashboard build
      - save_cache:
          key: dashboard-build-{{ checksum "apps/dashboard/package.json" }}
          paths:
            - apps/dashboard/.next/cache

      #- run:
      #    name: Notify error on deploy
      #    command: node scripts/discord fail dashboard
      #    when: on_fail

      #- run:
      #    name: Notify deploy
      #    command: node scripts/discord success dashboard
      #    when: on_success

job: &job
  context:
    - LetterCMS
  filters:
    branches:
      ignore:
        - main
        - production

workflows:
  checks:
    jobs:
      - lint:
        <<: *job
      #- unit-test:
      #  <<: *job
      - build:
        <<: *job
        requires:
          - lint
          #- unit-test
